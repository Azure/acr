(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{464:function(e,t,s){"use strict";s.r(t);var a=s(65),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"quickstart-deploy-a-connected-registry-to-a-nested-iot-edge-device"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quickstart-deploy-a-connected-registry-to-a-nested-iot-edge-device"}},[e._v("#")]),e._v(" Quickstart: Deploy a connected registry to a nested IoT Edge device")]),e._v(" "),s("p",[e._v("In this quickstart, you use "),s("RouterLink",{attrs:{to:"/preview/connected-registry/container-registry-intro.html"}},[e._v("Azure Container Registry")]),e._v(" commands to deploy a connected registry to a nested Azure IoT Edge device. You can review the "),s("RouterLink",{attrs:{to:"/preview/connected-registry/intro-connected-registry.html"}},[e._v("ACR connected registry introduction")]),e._v(" for details about the connected registry feature of Azure Container Registry.")],1),e._v(" "),s("p",[e._v("[!INCLUDE "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/quickstart-linux?view=iotedge-2018-06",target:"_blank",rel:"noopener noreferrer"}},[e._v("quickstarts"),s("OutboundLink")],1),e._v("]")]),e._v(" "),s("p",[e._v("[!INCLUDE "),s("a",{attrs:{href:"https://github.com/MicrosoftDocs/azure-docs/blob/master/includes/azure-cli-prepare-your-environment.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("azure-cli-prepare-your-environment.md"),s("OutboundLink")],1),e._v("]")]),e._v(" "),s("h2",{attrs:{id:"before-you-begin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#before-you-begin"}},[e._v("#")]),e._v(" Before you begin")]),e._v(" "),s("p",[e._v("This tutorial also requires that you have the knowledge about set up a connected registry on a IoT Edge device by following the "),s("RouterLink",{attrs:{to:"/preview/connected-registry/quickstart-deploy-connected-registry-iot-edge-cli.html"}},[e._v("Quickstart: Deploy a connected registry to an IoT Edge device")]),e._v(".")],1),e._v(" "),s("p",[e._v("Also, make sure that you have created the connected registry resource in Azure as described in the "),s("RouterLink",{attrs:{to:"/preview/connected-registry/quickstart-connected-registry-cli.html"}},[e._v("Create connected registry using the CLI")]),e._v(" quickstart guide. Only "),s("code",[e._v("mirror")]),e._v(" mode will work for this scenario.")],1),e._v(" "),s("h2",{attrs:{id:"retrieve-connected-registry-configuration-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retrieve-connected-registry-configuration-information"}},[e._v("#")]),e._v(" Retrieve connected registry configuration information")]),e._v(" "),s("p",[e._v("Before deploying the connected registry to the nested IoT Edge device, you will need to retrieve the configuration from the connected registry resource in Azure. Use the "),s("a",{attrs:{href:"/cli/azure/acr#az-acr-connected-registry-install"}},[e._v("az acr connected-registry install")]),e._v(" command to retrieve the configuration.")]),e._v(" "),s("div",{staticClass:"language-azurecli line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("az acr connected-registry install renew-credentials \\\n  --registry mycontainerregistry001 \\\n  --name myconnectedmirror \\\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("This will return the connection string for the connected registry including the newly generated passwords.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ACR_REGISTRY_CONNECTION_STRING"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ConnectedRegistryName=myconnectedmirror;SyncTokenName=myconnectedmirror-sync-token;SyncTokenPassword=s0meCoMPL3xP4$$W0rd001!@#;ParentGatewayEndpoint=<parent gateway endpoint>;ParentEndpointProtocol=<http or https>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ACR_REGISTRY_LOGIN_SERVER"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<Optional: connected registry login server. More info at https://aka.ms/acr/connected-registry>"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("The JSON above lists the environment variables that need to be passed to the connected registry container at run time. The following environment variables are optional:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("ACR_REGISTRY_LOGIN_SERVER")]),e._v(" - this is the hostname or FQDN of the IoT Edge device that hosts the connected registry.")])]),e._v(" "),s("p",[e._v("You will need the information for the IoT Edge manifest below.")]),e._v(" "),s("blockquote",[s("p",[e._v("[!IMPORTANT]\nMake sure that you save the generated connection string. The connection string contains one-time password that cannot be retrieved. If you issue the command again, new passwords will be generated. You can generate new passwords using the "),s("a",{attrs:{href:"/cli/azure/acr/credential#az-acr-token-credential-generate"}},[e._v("az acr token credential generate")]),e._v(" command.")])]),e._v(" "),s("h2",{attrs:{id:"configure-a-deployment-manifest-for-the-nested-iot-edge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-a-deployment-manifest-for-the-nested-iot-edge"}},[e._v("#")]),e._v(" Configure a deployment manifest for the nested IoT Edge")]),e._v(" "),s("p",[e._v("A deployment manifest is a JSON document that describes which modules to deploy to the IoT Edge device. For more information about how deployment manifests work and how to create them, see "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/module-composition?view=iotedge-2020-11#:~:text=The%20IoT%20Edge%20agent%20module,should%20be%20created%20and%20managed.",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understand how IoT Edge modules can be used, configured, and reused"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("To deploy the connected registry module using the Azure CLI, save the following deployment manifest locally as a "),s("code",[e._v(".json")]),e._v(" file.")]),e._v(" "),s("p",[e._v("[!IMPORTANT] In the following deployment manifest, $upstream will be used as the IP or FQDN of the device hosting parent connected registry. However $upstream is not supported in env variable. The connected registry need read env variable ACR_PARENT_GATEWAY_ENDPOINT to get the parent gateway endpoint. Instead of using $upstream, connected registry supports dynamically resolving the IP or FQDN from another env variable. On the nested IoT, there's env variable $IOTEDGE_PARENTHOSTNAME on lower level that is equal to IP or FQDN of the parent device. We can pass this env variable as the value of ACR_PARENT_GATEWAY_ENDPOINT to avoid hardcode the parent IP or FQDN.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"modulesContent"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"$edgeAgent"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"properties.desired"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"modules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"connected-registry"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"image"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream/acr/connected-registry:0.3.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"createOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{\\"HostConfig\\":{\\"Binds\\":[\\"/home/azureuser/connected-registry:/var/acr/data\\",\\"/usr/local/share/ca-certificates:/usr/local/share/ca-certificates\\",\\"/etc/ssl/certs:/etc/ssl/certs\\",\\"LogConfig\\":{ \\"Type\\": \\"json-file\\", \\"Config\\": {\\"max-size\\": \\"10m\\",\\"max-file\\": \\"3\\"}}]}}"')]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ACR_REGISTRY_CONNECTION_STRING"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ConnectedRegistryName=myconnectedmirror;SyncTokenName=myconnectedmirror-sync-token;SyncTokenPassword=s0meCoMPL3xP4$$W0rd001!@#;ParentGatewayEndpoint=$IOTEDGE_PARENTHOSTNAME;ParentEndpointProtocol=https"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"running"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"restartPolicy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"always"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0"')]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"IoTEdgeApiProxy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"image"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream/azureiotedge-api-proxy:9.9.9-dev"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"createOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{\\"HostConfig\\": {\\"PortBindings\\": {\\"443/tcp\\": [{\\"HostPort\\": \\"443\\"}]}}}"')]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"NGINX_DEFAULT_PORT"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"443"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"CONNECTED_ACR_ROUTE_ADDRESS"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"connectedRegistry:8080"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"NGINX_CONFIG_ENV_VAR_LIST"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"NGINX_DEFAULT_PORT,BLOB_UPLOAD_ROUTE_ADDRESS,CONNECTED_ACR_ROUTE_ADDRESS,IOTEDGE_PARENTHOSTNAME,DOCKER_REQUEST_ROUTE_ADDRESS"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"BLOB_UPLOAD_ROUTE_ADDRESS"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"AzureBlobStorageonIoTEdge:11002"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"running"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"restartPolicy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"always"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"startupOrder"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"runtime"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"minDockerVersion"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v1.25"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"registryCredentials"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"tsmregistry"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"address"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$$$0meCoMPL3xP4$$W0rd001!@#$$"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"username"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myconnectedmirror-sync-token"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker"')]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"schemaVersion"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"systemModules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"edgeAgent"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"image"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream/azureiotedge-agent:20210609.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"createOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"SendRuntimeQualityTelemetry"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"edgeHub"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"image"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream/azureiotedge-hub:20210609.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"createOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{\\"HostConfig\\":{\\"PortBindings\\":{\\"443/tcp\\":[{\\"HostPort\\":\\"443\\"}],\\"5671/tcp\\":[{\\"HostPort\\":\\"5671\\"}],\\"8883/tcp\\":[{\\"HostPort\\":\\"8883\\"}]}}}"')]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"running"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"restartPolicy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"always"')]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"$edgeHub"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"properties.desired"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"routes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"route"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FROM /messages/* INTO $upstream"')]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"schemaVersion"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"storeAndForwardConfiguration"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"timeToLiveSecs"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("7200")]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br"),s("span",{staticClass:"line-number"},[e._v("87")]),s("br"),s("span",{staticClass:"line-number"},[e._v("88")]),s("br"),s("span",{staticClass:"line-number"},[e._v("89")]),s("br"),s("span",{staticClass:"line-number"},[e._v("90")]),s("br"),s("span",{staticClass:"line-number"},[e._v("91")]),s("br"),s("span",{staticClass:"line-number"},[e._v("92")]),s("br"),s("span",{staticClass:"line-number"},[e._v("93")]),s("br"),s("span",{staticClass:"line-number"},[e._v("94")]),s("br"),s("span",{staticClass:"line-number"},[e._v("95")]),s("br"),s("span",{staticClass:"line-number"},[e._v("96")]),s("br"),s("span",{staticClass:"line-number"},[e._v("97")]),s("br"),s("span",{staticClass:"line-number"},[e._v("98")]),s("br")])]),s("p",[e._v("Use the information from the previous sections to update the relevant JSON values:")]),e._v(" "),s("ul",[s("li",[e._v("The environment variable "),s("code",[e._v("ACR_REGISTRY_CONNECTION_STRING")]),e._v(" needs to be updated with the output from the "),s("code",[e._v("az acr connected-registry install renew-credentials")]),e._v(" command above. You will need to manually replace the "),s("code",[e._v("ParentGatewayEndpoint")]),e._v(" with the $IOTEDGE_PARENTHOSTNAME. You will also need to select the proper protocol in "),s("code",[e._v("ParentEndpointProtocol")]),e._v(".")]),e._v(" "),s("li",[e._v("For each module in the manifest, you should update the registry endpoint to the $upstream.")])]),e._v(" "),s("p",[e._v("You will use the file path in the next section when you run the command to apply the configuration to your device.")]),e._v(" "),s("h2",{attrs:{id:"setup-and-deploy-the-connected-registry-module-on-nested-iot-edge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-and-deploy-the-connected-registry-module-on-nested-iot-edge"}},[e._v("#")]),e._v(" Setup and deploy the connected registry module on nested IoT Edge")]),e._v(" "),s("p",[e._v("This tutorial requires a nested Azure IoT Edge device to be set up upfront. You can use the "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/quickstart-linux?view=iotedge-2020-11",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deploy your first IoT Edge module to a virtual Linux device"),s("OutboundLink")],1),e._v(" quickstart guide to learn how to deploy a virtual IoT Edge device. To create a nested IoT Edge devices, follow the instructions "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/tutorial-nested-iot-edge?view=iotedge-2020-11",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tutorial: Create a hierarchy of IoT Edge devices"),s("OutboundLink")],1),e._v(" to learn how to configure hierarchical IoT edge devices. The connected registry is deployed as a module on the nested IoT Edge device.")]),e._v(" "),s("p",[e._v("Based on the tutorial, it overall includes the following steps:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Create top level and lower level vms from existing template. The template will also install the iot agent on it. You can use the "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/how-to-install-iot-edge?view=iotedge-2020-11",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tutorial: Install or uninstall Azure IoT Edge for Linux"),s("OutboundLink")],1),e._v(" to learn how to manually set up the machine if you need deploy from your own devices.")])]),e._v(" "),s("li",[s("p",[e._v("Use the iotedge-config tool to create and configure your hierarchy, follow the steps below in the Azure CLI:")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("mkdir nestedIotEdgeTutorial\ncd ~/nestedIotEdgeTutorial\nwget -O iotedge_config.tar "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/Azure-Samples/iotedge_config_cli/releases/download/latest/iotedge_config_cli.tar.gz"')]),e._v("\ntar -xvf iotedge_config.tar\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("This will create the iotedge_config_cli_release folder in your tutorial directory. The template file used to create your device hierarchy is the iotedge_config.yaml file found in ~/nestedIotEdgeTutorial/iotedge_config_cli_release/templates/tutorial. In the same directory, there're two deployment manifests for top and lower level deploymentTopLayer.json and deploymentLowerLayer.json files. Refer the #4 below on how to prepare them.")])]),e._v(" "),s("li",[s("p",[e._v("Edit iotedge_config.yaml with your information. This include the iothub_hostname, iot_name, deployment template file for both top layer and child as well as the credentials used to pull the image from upstream. Please refer "),s("RouterLink",{attrs:{to:"/preview/connected-registry/quickstart-deploy-connected-registry-iot-edge-cli.html"}},[e._v("Quickstart: Deploy a connected registry to an IoT Edge device")]),e._v(" if you are not familar how to create a client token. And you also make sure the client token get the permissions to pull all the required images. Below is a sample config.")],1),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("config_version"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0"')]),e._v("\n\niothub"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\niothub_hostname"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" myiothub.azure-devices.net\niothub_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" myiothub\n## Authentication method used by IoT Edge devices"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" symmetric_key or x509_certificate\nauthentication_method"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" symmetric_key \n\n## Root certificate used to generate device CA certificates. Optional. If not provided a self-signed CA will be generated\n# certificates"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n#   root_ca_cert_path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n#   root_ca_cert_key_path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n\n## IoT Edge configuration template to use\nconfiguration"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\ntemplate_config_path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./templates/tutorial/device_config.toml"')]),e._v("\ndefault_edge_agent"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream:8000/azureiotedge-agent:20210609.5"')]),e._v("\n\n## Hierarchy of IoT Edge devices to create\nedgedevices"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\ndevice_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" top-layerx\nedge_agent"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mycontainerregistry001.azurecr.io/azureiotedge-agent:20210609.5"')]),e._v(" ## Optional. If not provided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" default_edge_agent will be used\ndeployment"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./templates/tutorial/deploymentTopLayer.json"')]),e._v(" ## Optional. If provided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the given deployment file will be applied to the newly created device\n# hostname"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FQDN or IP"')]),e._v(" ## Optional. If provided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" install.sh will not prompt user for this value nor the parent_hostname value\ncontainer_auth"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// The token used to pull the image from cloud registry")]),e._v("\n    serveraddress"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mycontainerregistry001.azurecr.io"')]),e._v("\n    username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"crimagepulltokentop"')]),e._v("\n    password"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"HwBU+ZhB+X9AOmeAq6ZG2G/y2QD=8sfT"')]),e._v("\nchild"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    - device_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" lower-layerx\n    deployment"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./templates/tutorial/deploymentLowerLayer.json"')]),e._v(" ## Optional. If provided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the given deployment file will be applied to the newly created device\n    # hostname"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FQDN or IP"')]),e._v(" ## Optional. If provided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" install.sh will not prompt user for this value nor the parent_hostname value\n    container_auth"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//The token used to pull the image from parent connected registry")]),e._v("\n        serveraddress"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$upstream:8000"')]),e._v("\n        username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"crimagepulltokenlower"')]),e._v("\n        password"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$$$0meCoMPL3xP4$$W0rd001!@#$$"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("Prepare the top level and lower level deployment files (deploymentTopLayer.json and deploymentLowerLayer.json).")]),e._v(" "),s("p",[e._v("The top level deployment file is the same as the one you used to set up a connected registry on a IoT Edge device. Refer "),s("RouterLink",{attrs:{to:"/preview/connected-registry/quickstart-deploy-connected-registry-iot-edge-cli.html"}},[e._v("Quickstart: Deploy a connected registry to an IoT Edge device")]),e._v(". Make sure you do have API proxy module deployed on top layer and open the port "),s("code",[e._v("8000")]),e._v(", "),s("code",[e._v("5671")]),e._v(", "),s("code",[e._v("8883")]),e._v(".")],1),e._v(" "),s("p",[e._v("For the lower level deployment file, please refer the above section 'Configure a deployment manifest for the nested IoT Edge' about the difference to the top level deployment file. Overall, the lowever level deployment file is similar as the top level deployment file. The differences are:")]),e._v(" "),s("ul",[s("li",[e._v("It need pull all the images required from top level connected registry instead of from cloud registry or MCR.\nWhen you set up the top level connected registry, you need make sure it will sync up all the IoT agent, hub and connected registry images locally (azureiotedge-agent, azureiotedge-hub, connected-registry). The lower level IoT device need pull these images from the top level connected registry.")]),e._v(" "),s("li",[e._v("It need configure the parent gateway endpoint with the top level connected registry IP or FQDN instead of cloud registry.")])])]),e._v(" "),s("li",[s("p",[e._v("Install in the top and lower level devices.\nNavigate to your iotedge_config_cli_releae directory and run the tool to create your hierarchy of IoT Edge devices.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("cd ~/nestedIotEdgeTutorial/iotedge_config_cli_release\n./iotedge_config --config ~/nestedIotEdgeTutorial/iotedge_config_cli_release/templates/tutorial/iotedge_config.yaml --output ~/nestedIotEdgeTutorial/iotedge_config_cli_release/outputs -f\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("With the --output flag, the toos creates the device certificates, certificate bundles, and a log file in a directory of your choice. With the -f flag set, the tool will automatically look for existing IoT Edge devices in your IoT Hub and remove them, to avoid errors and keep your hub clean.")]),e._v(" "),s("p",[e._v("Copy the generated top-layer.zip and lower-layer.zip in above steps to the corresponding top and lower vms using scp。")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("scp <PATH_TO_CONFIGURATION_BUNDLE>   <USER>@<VM_IP_OR_FQDN>"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("~\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Go to each device, unzip the configuration bundle. You'll need to install zip first.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("sudo apt install zip\nunzip ~/<PATH_TO_CONFIGURATION_BUNDLE>/<CONFIGURATION_BUNDLE>.zip (unzip top-layer.zip)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("Unzip the installation files and run ./install.sh, input the ip and host name. All are done for top layer device deployment. Run iotedge list to double check if all modules are running well.")]),e._v(" "),s("p",[e._v("Repeat the same steps in lower level device. Unzip files and run ./install.sh. Input the ip, host name and parent hostname.\nAll are done for lower layer deployment. Run iotedge list to double check if all modules are running well.")]),e._v(" "),s("p",[e._v("If there're any problems e.g. invalid deployment manifest. You need manually redeploy the modules. Refer the next session on how to make a deployment manually on top or lower device.")])])]),e._v(" "),s("h2",{attrs:{id:"manully-deploy-the-connected-registry-module-on-iot-edge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manully-deploy-the-connected-registry-module-on-iot-edge"}},[e._v("#")]),e._v(" Manully Deploy the connected registry module on IoT Edge")]),e._v(" "),s("p",[e._v("The following step might be covered during nested iot setup after you run install.sh on top and lower level devices. However, it is also possible the previous deployment doesn't success and you can use the following way to redeploy it.")]),e._v(" "),s("p",[e._v("Use the following command to deploy the connected registry module on the IoT Edge device:")]),e._v(" "),s("div",{staticClass:"language-azurecli line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("az iot edge set-modules \\\n  --device-id [device id] \\\n  --hub-name [hub name] \\\n  --content [file path]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("For more details you can refer to the "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/iot-edge/how-to-deploy-modules-cli?view=iotedge-2020-11",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deploy Azure IoT Edge modules with Azure CLI"),s("OutboundLink")],1),e._v(" article.")]),e._v(" "),s("p",[e._v("To check the status of the connected registry, use the following CLI command:")]),e._v(" "),s("div",{staticClass:"language-azurecli line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("az acr connected-registry show \\\n  --registry mycontainerregistry001 \\\n  --name myconnectedmirror \\\n  --output table\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("You may need to a wait few minutes until the deployment of the connected registry completes.")]),e._v(" "),s("p",[e._v("Successful response from the command will include the following:")]),e._v(" "),s("div",{staticClass:"language-azurecli line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("connectionState: Online\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"next-steps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next steps")]),e._v(" "),s("p",[e._v("In this quickstart, you learned how to deploy a connected registry to an IoT Edge device. Continue to the next guide to learn how to pull images from the newly deployed connected registry.")]),e._v(" "),s("blockquote",[s("p",[s("RouterLink",{attrs:{to:"/preview/connected-registry/quickstart-pull-images-from-connected-registry.html"}},[e._v("Quickstart: Pull images from a connected registry")])],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);