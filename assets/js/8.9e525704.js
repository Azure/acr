(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{434:function(e,s,a){e.exports=a.p+"assets/img/consuming-public-content-workflow.852071b4.png"},435:function(e,s,a){e.exports=a.p+"assets/img/consuming-public-content-objects.3679c56f.png"},458:function(e,s,a){"use strict";a.r(s);var t=a(65),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"how-to-consume-maintain-public-content-with-azure-container-registry-tasks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-consume-maintain-public-content-with-azure-container-registry-tasks"}},[e._v("#")]),e._v(" How to consume & maintain public content with Azure Container Registry Tasks")]),e._v(" "),t("p",[e._v("An Azure container registry hosts your container images and other "),t("a",{attrs:{href:"https://aka.ms/acr/artifacts",target:"_blank",rel:"noopener noreferrer"}},[e._v("OCI artifacts"),t("OutboundLink")],1),e._v(" in a private, authenticated environment. However, your environment may have dependencies on public content such as public container images, "),t("a",{attrs:{href:"https://helm.sh",target:"_blank",rel:"noopener noreferrer"}},[e._v("helm charts"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://www.openpolicyagent.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open Policy Agent (OPA)"),t("OutboundLink")],1),e._v(" policies or other artifacts. For example, you might run [nginx] for service routing or "),t("code",[e._v("docker build FROM")]),e._v(" "),t("a",{attrs:{href:"https://hub.docker.com/_/alpine",target:"_blank",rel:"noopener noreferrer"}},[e._v("alpine"),t("OutboundLink")],1),e._v(" by pulling images directly from Docker Hub or another public registry. As upstream changes occur, this article will explain how to import and maintain these public artifacts.")]),e._v(" "),t("p",[e._v("For more information about the risks introduced by dependencies on public content and best practices see the "),t("a",{attrs:{href:"https://docs.google.com/document/d/1fxayMznIkszBI9Y2S3KGSyi2hFMwUIwDfn3D2wQcye4/edit?usp=sharing",target:"_blank",rel:"noopener noreferrer"}},[e._v("OCI Consuming Public Content Blog post"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("This article covers features and workflows in Azure Container Registry to help you manage consuming and maintaining public content:")]),e._v(" "),t("ul",[t("li",[e._v("Import local copies of dependent public images.")]),e._v(" "),t("li",[e._v("Validate public images through security scanning and functional testing.")]),e._v(" "),t("li",[e._v("Promoting to private registries for internal usage.")]),e._v(" "),t("li",[e._v("Triggering base image updates for applications dependent upon public content.")]),e._v(" "),t("li",[e._v("Using "),t("RouterLink",{attrs:{to:"/container-registry-tasks-overview.html"}},[e._v("ACR Tasks")]),e._v(" to automate this workflow.")],1)]),e._v(" "),t("p",[t("img",{attrs:{src:a(434),alt:"Consuming Public Content Workflow"}})]),e._v(" "),t("p",[e._v("This article refers mainly to container images, but the concepts apply to other supported "),t("RouterLink",{attrs:{to:"/container-registry-image-formats.html"}},[e._v("registry artifacts")]),e._v(".")],1),e._v(" "),t("p",[e._v("The gated import workflow refers to decoupling your organizations dependencies on externally managed artifacts. For instance, images sourced from public registries like: "),t("a",{attrs:{href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker hub"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://cloud.google.com/container-registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("gcr"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://quay.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("quay"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://docs.github.com/en/free-pro-team@latest/packages/getting-started-with-github-container-registry/about-github-container-registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("github container registry"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://aka.ms/mcr",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Container Registry"),t("OutboundLink")],1),e._v(" or even other public "),t("a",{attrs:{href:"https://aka.ms/acr",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Container Registries"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Consider balancing these two, possibly conflicting goals:")]),e._v(" "),t("ol",[t("li",[e._v("Do you really want an unexpected upstream change to possibly take out your production system?")]),e._v(" "),t("li",[e._v("Do you want upstream security fixes, for the versions you depend upon, to be automatically deployed?")])]),e._v(" "),t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[e._v("Create three registries to represent the workflow\n"),t("ul",[t("li",[e._v("A simulated copy of docker hub for public images.\n"),t("ul",[t("li",[e._v("This allows us simulate a base image update, which would normally be initiated on "),t("a",{attrs:{href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Hub"),t("OutboundLink")],1),e._v(" or other public registries.")])])]),e._v(" "),t("li",[e._v("A development team registry, that will host one more more teams that build and manage images.\n"),t("ul",[t("li",[t("strong",[e._v("Note:")]),e._v(" "),t("a",{attrs:{href:"https://aka.ms/acr/repo-permissions",target:"_blank",rel:"noopener noreferrer"}},[e._v("repository based RBAC (preview)"),t("OutboundLink")],1),e._v(" is now available, enabling multiple teams to share a single registry, with unique permission sets")])])]),e._v(" "),t("li",[e._v("A registry to host imported base artifacts.")])])]),e._v(" "),t("li",[e._v("An Azure KeyVault for storing access keys to the registries")]),e._v(" "),t("li",[e._v("An "),t("a",{attrs:{href:"https://aka.ms/aci",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Container Instance"),t("OutboundLink")],1),e._v(" to host the "),t("code",[e._v("hello-world")]),e._v(" image.")])]),e._v(" "),t("p",[e._v("The following steps will:")]),e._v(" "),t("ol",[t("li",[e._v("Configure unique values for your environment")]),e._v(" "),t("li",[e._v("Simulate a Public Registry")]),e._v(" "),t("li",[e._v("Automate building a hello-world image")]),e._v(" "),t("li",[e._v("Automate deploying to an "),t("a",{attrs:{href:"https://aka.ms/aci",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Container Instance"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Simulate upstream changes directly to your environment")]),e._v(" "),t("li",[e._v("Create a gated import, that validates upstream changes are appropriate for your environment")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(435),alt:"import workflow components"}})]),e._v(" "),t("p",[e._v("This walk through will:")]),e._v(" "),t("ol",[t("li",[e._v("Configure three registries representing:\n"),t("ul",[t("li",[e._v("Simulated Docker Hub ("),t("code",[e._v("publicregistry")]),e._v(")to support changing the base image")]),e._v(" "),t("li",[e._v("Team registry ("),t("code",[e._v("contoso")]),e._v(") for private images")]),e._v(" "),t("li",[e._v("Company/team shared registry ("),t("code",[e._v("baseartifacts")]),e._v(") for imported public content")])])]),e._v(" "),t("li",[e._v("Configure ACR Tasks to:\n"),t("ul",[t("li",[e._v("build the simulated public node image")]),e._v(" "),t("li",[e._v("import and validate the public node image to the company/team shared registry")]),e._v(" "),t("li",[e._v("build and deploy the hello-world image")])])]),e._v(" "),t("li",[e._v("ACR Task definitions, including configurations for:")]),e._v(" "),t("li",[e._v("Collection of registry credentials which can be pointers to KeyVault")]),e._v(" "),t("li",[e._v("Collection of secrets, available within an "),t("code",[e._v("acr-task.yaml")]),e._v(", which are pointers to KeyVault")]),e._v(" "),t("li",[e._v("Collection of configured values used within an "),t("code",[e._v("acr-task.yaml")]),e._v(".")]),e._v(" "),t("li",[e._v("An Azure KeyVault, securing all secrets")]),e._v(" "),t("li",[e._v("An Azure Container Instance, hosting the hello-world build application")])]),e._v(" "),t("h3",{attrs:{id:"set-environment-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-environment-variables"}},[e._v("#")]),e._v(" Set environment variables")]),e._v(" "),t("p",[e._v("Configure variables unique to your environment. We follow best practices for placing resources with durable content in their own resource group to minimize accidental deletion, however you can place these in a single resource group if desired.")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# Set the three registry names, unique to your environment:\nREGISTRY_PUBLIC=publicregistry\nREGISTRY_BASE_ARTIFACTS=contosobaseartifacts\nREGISTRY=contoso\n\n# set the location all resources will be created in:\nRESOURCE_GROUP_LOCATION=eastus\n\n# default resource groups\nREGISTRY_PUBLIC_RG=${REGISTRY_PUBLIC}-rg\nREGISTRY_BASE_ARTIFACTS_RG=${REGISTRY_BASE_ARTIFACTS}-rg\nREGISTRY_RG=${REGISTRY}-rg\n\n# fully qualified registry urls\nREGISTRY_DOCKERHUB_URL=docker.io\nREGISTRY_PUBLIC_URL=${REGISTRY_PUBLIC}.azurecr.io\nREGISTRY_BASE_ARTIFACTS_URL=${REGISTRY_BASE_ARTIFACTS}.azurecr.io\nREGISTRY_URL=${REGISTRY}.azurecr.io\n\n# Azure KeyVault for storing secrets\nAKV=acr-task-credentials\nAKV_RG=${AKV}-rg\n\n# ACI for hosting the deployed application\nACI=hello-world-aci\nACI_RG=${ACI}-rg\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br")])]),t("h3",{attrs:{id:"git-repositories-and-tokens"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-repositories-and-tokens"}},[e._v("#")]),e._v(" GIT repositories and tokens")]),e._v(" "),t("p",[e._v("To simulate your environment, fork each of these into repositories you can mange. Then, update the variables for your forked repositories.\nNotice "),t("code",[e._v(":main")]),e._v(" concatenated to the end of the git URLs representing the default repository branch.")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("GIT_BASE_IMAGE_NODE=https://github.com/importing-public-content/base-image-node.git#main\nGIT_NODE_IMPORT=https://github.com/importing-public-content/import-baseimage-node.git#main\nGIT_HELLO_WORLD=https://github.com/importing-public-content/hello-world.git#main\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("Establish a "),t("a",{attrs:{href:"https://github.com/settings/tokens",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Token"),t("OutboundLink")],1),e._v(" for ACR Tasks to clone and establish git webhooks.\nSee: @DAN, CAN YOU UPDATE TO A REFERENCE FOR REQUIRED PERMISSIONS?")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("GIT_TOKEN=<set-git-token-here>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Docker Hub Credentials"),t("br"),e._v("\nTo avoid throttling and identify requests, "),t("a",{attrs:{href:"https://hub.docker.com/settings/security",target:"_blank",rel:"noopener noreferrer"}},[e._v("create a Docker Hub token"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("REGISTRY_DOCKERHUB_USER=<yourusername>\nREGISTRY_DOCKERHUB_PASSWORD=<yourtoken>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"create-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-resources"}},[e._v("#")]),e._v(" Create Resources")]),e._v(" "),t("p",[e._v("Create the three registries:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az group create --name $REGISTRY_PUBLIC_RG --location $RESOURCE_GROUP_LOCATION\naz acr create --resource-group $REGISTRY_PUBLIC_RG --name $REGISTRY_PUBLIC --sku Premium\n\naz group create --name $REGISTRY_BASE_ARTIFACTS_RG --location $RESOURCE_GROUP_LOCATION\naz acr create --resource-group $REGISTRY_BASE_ARTIFACTS_RG --name $REGISTRY_BASE_ARTIFACTS --sku Premium\n\naz group create --name $REGISTRY_RG --location $RESOURCE_GROUP_LOCATION\naz acr create --resource-group $REGISTRY_RG --name $REGISTRY --sku Premium\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("Create a KeyVault for secrets")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az group create --name $AKV_RG --location $RESOURCE_GROUP_LOCATION\naz keyvault create --resource-group $AKV_RG --name $AKV\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Create a Docker Hub token"),t("br"),e._v("\nTo avoid throttling and identify requests, "),t("a",{attrs:{href:"https://hub.docker.com/settings/security",target:"_blank",rel:"noopener noreferrer"}},[e._v("create a Docker Hub token"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az keyvault secret set \\\n--vault-name $AKV \\\n--name registry-dockerhub-user \\\n--value $REGISTRY_DOCKERHUB_USER\n\naz keyvault secret set \\\n--vault-name $AKV \\\n--name registry-dockerhub-password \\\n--value $REGISTRY_DOCKERHUB_PASSWORD\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("Set and Verify a Git token within KeyVault")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az keyvault secret set --vault-name $AKV --name github-token --value $GIT_TOKEN\naz keyvault secret show --vault-name $AKV --name github-token --query value -o tsv\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Create a Resource Group for an Azure Container Instance")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az group create --name $ACI_RG --location $RESOURCE_GROUP_LOCATION\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"create-public-node-base-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-public-node-base-image"}},[e._v("#")]),e._v(" Create public node base image")]),e._v(" "),t("p",[e._v("To simulate the node image on Docker Hub, create an "),t("a",{attrs:{href:"https://aka.ms/acr/tasks",target:"_blank",rel:"noopener noreferrer"}},[e._v("ACR Task"),t("OutboundLink")],1),e._v(" to build and maintain the public image. This allows simulating changes by the node image maintainers.")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task create \\\n  --name node-public \\\n  -r $REGISTRY_PUBLIC \\\n  -f acr-task.yaml \\\n  --context $GIT_BASE_IMAGE_NODE \\\n  --git-access-token $(az keyvault secret show \\\n                        --vault-name $AKV \\\n                        --name github-token \\\n                        --query value -o tsv) \\\n  --set REGISTRY_FROM_URL=${REGISTRY_DOCKERHUB_URL}/ \\\n  --assign-identity\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("To avoid Docker throttling, add "),t("a",{attrs:{href:"https://hub.docker.com/settings/security",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Hub credentials"),t("OutboundLink")],1),e._v(":")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task credential add \\\n  -n node-public \\\n  -r $REGISTRY_PUBLIC \\\n  --login-server $REGISTRY_DOCKERHUB_URL \\\n  -u https://${AKV}.vault.azure.net/secrets/registry-dockerhub-user \\\n  -p https://${AKV}.vault.azure.net/secrets/registry-dockerhub-password \\\n  --use-identity [system]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Grant access to ACR for reading values from KeyVault")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az keyvault set-policy \\\n  --name $AKV \\\n  --resource-group $AKV_RG \\\n  --object-id $(az acr task show \\\n                  --name node-public \\\n                  --registry $REGISTRY_PUBLIC \\\n                  --query identity.principalId --output tsv) \\\n  --secret-permissions get\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/container-registry/container-registry-tasks-overview#task-scenarios",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tasks can be triggered"),t("OutboundLink")],1),e._v(" by git commits, base image updates, scheduled runs or manually executed.\nRun the task to generate the "),t("code",[e._v("node")]),e._v(" image")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task run -r $REGISTRY_PUBLIC -n node-public\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("List the image in the simulated public registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr repository show-tags -n $REGISTRY_PUBLIC --repository node\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"create-the-hello-world-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-the-hello-world-image"}},[e._v("#")]),e._v(" Create the hello-world image")]),e._v(" "),t("p",[e._v("Based on the simulated public node image, build a hello-world image.")]),e._v(" "),t("h3",{attrs:{id:"create-a-token-for-access-to-the-public-registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-token-for-access-to-the-public-registry"}},[e._v("#")]),e._v(' Create a Token for access to the "public" registry')]),e._v(" "),t("p",[e._v("Using "),t("a",{attrs:{href:"https://aka.ms/acr/tokens",target:"_blank",rel:"noopener noreferrer"}},[e._v("ACR Tokens"),t("OutboundLink")],1),e._v(", create access tokens, scoped to "),t("code",[e._v("pull")])]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('az keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY_PUBLIC}-user" \\\n  --value "registry-${REGISTRY_PUBLIC}-user"\n\naz keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY_PUBLIC}-password" \\\n  --value $(az acr token create \\\n              --name "registry-${REGISTRY_PUBLIC}-user" \\\n              --registry $REGISTRY_PUBLIC \\\n              --scope-map _repositories_pull \\\n              -o tsv \\\n              --query credentials.passwords[0].value)\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("h3",{attrs:{id:"create-an-acr-token-for-access-by-aci-to-pull-the-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-an-acr-token-for-access-by-aci-to-pull-the-image"}},[e._v("#")]),e._v(" Create an ACR Token for access by ACI to pull the image")]),e._v(" "),t("p",[e._v("A token to the registry with "),t("code",[e._v("hello-world")]),e._v(" is created. Permissions are scoped to read (pull)")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('az keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY}-user" \\\n  --value "registry-${REGISTRY}-user"\n\naz keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY}-password" \\\n  --value $(az acr token create \\\n              --name "registry-${REGISTRY}-user" \\\n              --registry $REGISTRY \\\n              --repository hello-world content/read \\\n              -o tsv \\\n              --query credentials.passwords[0].value)\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("h3",{attrs:{id:"create-and-maintain-a-hello-world-image-using-acr-tasks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-and-maintain-a-hello-world-image-using-acr-tasks"}},[e._v("#")]),e._v(" Create and maintain a "),t("code",[e._v("hello-world")]),e._v(" image using ACR Tasks")]),e._v(" "),t("p",[e._v("Simulating a public registry, which could be docker hub, provide credentials using "),t("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/container-registry/container-registry-tasks-authentication-managed-identity#4-optional-add-credentials-to-the-task",target:"_blank",rel:"noopener noreferrer"}},[e._v("acr task credentials"),t("OutboundLink")],1),e._v(". Since the registry is an ACR, use the token created above. The "),t("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/container-registry/container-registry-tasks-authentication-managed-identity#4-optional-add-credentials-to-the-task",target:"_blank",rel:"noopener noreferrer"}},[e._v("acr task credentials"),t("OutboundLink")],1),e._v(" may be used to pass docker credentials to any registry, including Docker Hub.")]),e._v(" "),t("p",[e._v("Within the "),t("code",[e._v("acr-task.yaml")]),e._v(", we deploy the newly built image to ACI. The resource group was created above. By calling "),t("code",[e._v("az container create")]),e._v(" with only a difference in the "),t("code",[e._v("image:tag")]),e._v(", the same instance is used.")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task create \\\n  -n hello-world \\\n  -r $REGISTRY \\\n  -f acr-task.yaml \\\n  --context $GIT_HELLO_WORLD \\\n  --git-access-token $(az keyvault secret show \\\n                        --vault-name $AKV \\\n                        --name github-token \\\n                        --query value -o tsv) \\\n  --set REGISTRY_FROM_URL=${REGISTRY_PUBLIC_URL}/ \\\n  --set KEYVAULT=$AKV \\\n  --set ACI=$ACI \\\n  --set ACI_RG=$ACI_RG \\\n  --assign-identity\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("p",[e._v("Add credentials for our Public Registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task credential add \\\n  -n hello-world \\\n  -r $REGISTRY \\\n  --login-server $REGISTRY_PUBLIC_URL \\\n  -u https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_PUBLIC}-user \\\n  -p https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_PUBLIC}-password \\\n  --use-identity [system]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Grant access to read values from the KeyVault")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az keyvault set-policy \\\n  --name $AKV \\\n  --resource-group $AKV_RG \\\n  --object-id $(az acr task show \\\n                  --name hello-world \\\n                  --registry $REGISTRY \\\n                  --query identity.principalId --output tsv) \\\n  --secret-permissions get\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("Grant the task access to create and manage ACI by granting access to the resource group:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az role assignment create \\\n  --assignee $(az acr task show \\\n  --name hello-world \\\n  --registry $REGISTRY \\\n  --query identity.principalId --output tsv) \\\n  --scope $(az group show -n $ACI_RG --query id -o tsv) \\\n  --role owner\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("With the task created, run the task to build/deploy the hello-world image:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task run -r $REGISTRY -n hello-world\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once created, browse the site hosting the "),t("code",[e._v("hell-world")]),e._v(" image.")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("explorer.exe "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("az container show "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --resource-group $ACI_RG "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --name $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("ACI"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --query ipAddress.ip "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --out tsv"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"update-the-base-image-with-a-bad-change"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-the-base-image-with-a-bad-change"}},[e._v("#")]),e._v(' Update the base image with a "bad" change')]),e._v(" "),t("p",[e._v("Open the "),t("code",[e._v("Dockerfile")]),e._v(" in base-image-node repo\nChange the "),t("code",[e._v("BACKGROUND_COLOR")]),e._v(" to "),t("code",[e._v("Red")]),e._v(" to simulate a change that would break our environment.")]),e._v(" "),t("div",{staticClass:"language-Dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" REGISTRY_NAME=")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REGISTRY_NAME}")]),e._v("node:15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" NODE_VERSION 15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" BACKGROUND_COLOR Red")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("Commit the change and watch for ACR Tasks to automatically start building.")]),e._v(" "),t("p",[e._v("Watch for the task to start executing:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("You should eventually see STATUS "),t("code",[e._v("Succeeded")]),e._v(" based on a TRIGGER of "),t("code",[e._v("Commit")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("RUN ID    TASK      PLATFORM    STATUS     TRIGGER    STARTED               DURATION\n--------  --------  ----------  ---------  ---------  --------------------  ----------\nca4       hub-node  linux       Succeeded  Commit     2020-10-24T05:02:29Z  00:00:22\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("Type "),t("code",[e._v("CTRL-C")]),e._v(" to exit the watch command, then view the logs for the most recent run:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once the node image is completed, "),t("code",[e._v("watch")]),e._v(" for ACR Tasks to automatically start the hello-world image:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("You should eventually see STATUS "),t("code",[e._v("Succeeded")]),e._v(" based on a TRIGGER of "),t("code",[e._v("Image Update")])]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("RUN ID    TASK         PLATFORM    STATUS     TRIGGER       STARTED               DURATION\n--------  -----------  ----------  ---------  ------------  --------------------  ----------\ndau       hello-world  linux       Succeeded  Image Update  2020-10-24T05:08:45Z  00:00:31\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("Type "),t("code",[e._v("CTRL-C")]),e._v(" to exit the watch command, then view the logs for the most recent run:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once completed, browse the site hosting the updated "),t("code",[e._v("hell-world")]),e._v(" image, which should have a red (broken) background.")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("explorer.exe "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("az container show "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --resource-group $ACI_RG "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --name $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("ACI"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --query ipAddress.ip "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --out tsv"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"checking-in"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checking-in"}},[e._v("#")]),e._v(" Checking in")]),e._v(" "),t("p",[e._v("At this point, you've created a "),t("code",[e._v("hello-world")]),e._v(" image that is automatically built on git commits, and changes to the base "),t("code",[e._v("node")]),e._v(" image. While we've built against a base image in ACR, this could be any supported registry.")]),e._v(" "),t("p",[e._v("The ACR Task base image update trigger automatically re-executes as the node image is updated. As seen here, not all updates are wanted.")]),e._v(" "),t("h2",{attrs:{id:"gated-imports-of-public-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gated-imports-of-public-content"}},[e._v("#")]),e._v(" Gated imports of public content")]),e._v(" "),t("p",[e._v("To prevent upstream changes from breaking critical workloads, security scanning and functional tests may be addedd.")]),e._v(" "),t("p",[e._v("This section covers:")]),e._v(" "),t("ul",[t("li",[e._v("Build a test image")]),e._v(" "),t("li",[e._v("Run a functional test script "),t("code",[e._v("./test.sh")]),e._v(" against the test image")]),e._v(" "),t("li",[e._v("If the image tests successfully, import the public image to the "),t("strong",[e._v("baseimages")]),e._v(" registry")])]),e._v(" "),t("h3",{attrs:{id:"write-automation-testing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#write-automation-testing"}},[e._v("#")]),e._v(" Write automation testing")]),e._v(" "),t("p",[e._v("To gate any upstream content, automated testing is implemented. In this example, a "),t("code",[e._v("test.sh")]),e._v(" is provided which checks the "),t("code",[e._v("$BACKGROUND_COLOR")]),e._v(". If the test fails, an "),t("code",[e._v("EXIT_CODE")]),e._v(" of "),t("code",[e._v("1")]),e._v(" is returned which causes the ACR Task step to fail, ending the task run. The tests can be expanded in any form of tools, including logging results. The gate is managed by a pass/fail response.")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" $BACKGROUND_COLOR "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tr")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'[:lower:]'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'[:upper:]'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'RED'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[e._v("\\e")]),e._v("[31mERROR: Invalid Color:"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[e._v("\\e")]),e._v('[0m"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BACKGROUND_COLOR}")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("EXIT_CODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[e._v("\\e")]),e._v("[32mValidation Complete - No Known Errors"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[e._v("\\e")]),e._v('[0m"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${EXIT_CODE}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("The "),t("code",[e._v("acr-task.yaml")]),e._v(" performs the following steps:")]),e._v(" "),t("ul",[t("li",[e._v("Build the test base image using the following dockerfile:"),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" REGISTRY_FROM_URL=")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REGISTRY_FROM_URL}")]),e._v("node:15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WORKDIR")]),e._v(" /test")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COPY")]),e._v(" ./test.sh .")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v(" ./test.sh")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])])]),e._v(" "),t("li",[e._v("When completed, validate the image by running the container, which runs "),t("code",[e._v("./test.sh")])]),e._v(" "),t("li",[e._v("Only if successfully completed, run the import steps, which are gated with "),t("code",[e._v("when: ['validate-base-image']")])])]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1.1.0\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("steps")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" build"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Build off the base image we'll track")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Add a test script to do unit test validations")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Note: the test validation image isn't saved to the registry")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# but the task logs captures log validation results")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      --build-arg REGISTRY_FROM_URL={{.Values.REGISTRY_FROM_URL}}\n      -f ./Dockerfile\n      -t {{.Run.Registry}}/node-import:test\n      .")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" validate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only continues if node-import:test returns a non-zero code")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("when")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'build-test-base-image'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{.Run.Registry}}/node-import:test"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" pull"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# import the public image to base-artifacts")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Override the stable tag,")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# and create a unique tag to enable rollback")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to a previously working image")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("when")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'validate-base-image'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n        docker pull {{.Values.REGISTRY_FROM_URL}}node:15-alpine")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" retag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("when")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'pull-base-image'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" docker tag "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(".Values.REGISTRY_FROM_URL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("15"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("alpine "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(".Run.Registry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("/node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("15"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("alpine\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" retag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("unique"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("tag\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("when")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'pull-base-image'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" docker tag "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(".Values.REGISTRY_FROM_URL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("15"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("alpine "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(".Run.Registry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("/node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("15"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("alpine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(".Run.ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" push"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("base"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("when")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'retag-base-image'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'retag-base-image-unique-tag'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{.Run.Registry}}/node:15-alpine"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{.Run.Registry}}/node:15-alpine-{{.Run.ID}}"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br")])]),t("p",[e._v("Create an ACR Task to import and test the node base image")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  az acr task create \\\n  --name base-import-node \\\n  -f acr-task.yaml \\\n  -r $REGISTRY_BASE_ARTIFACTS \\\n  --context $GIT_NODE_IMPORT \\\n  --git-access-token $(az keyvault secret show \\\n                        --vault-name $AKV \\\n                        --name github-token \\\n                        --query value -o tsv) \\\n  --set REGISTRY_FROM_URL=${REGISTRY_PUBLIC_URL}/ \\\n  --assign-identity\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("Add credentials for our public registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task credential add \\\n  -n base-import-node \\\n    -r $REGISTRY_BASE_ARTIFACTS \\\n  --login-server $REGISTRY_PUBLIC_URL \\\n  -u https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_PUBLIC}-user \\\n  -p https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_PUBLIC}-password \\\n  --use-identity [system]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Grant access to read values from the KeyVault")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az keyvault set-policy \\\n  --name $AKV \\\n  --resource-group $AKV_RG \\\n  --object-id $(az acr task show \\\n                  --name base-import-node \\\n                  --registry $REGISTRY_BASE_ARTIFACTS \\\n                  --query identity.principalId --output tsv) \\\n  --secret-permissions get\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("Run the import task:")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task run -n base-import-node -r $REGISTRY_BASE_ARTIFACTS\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If the task fails due to "),t("code",[e._v("./test.sh: Permission denied")]),e._v(" assure the script has execution permissions and commit back to the git repo:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +x ./test.sh\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"update-the-hello-world-image-to-build-from-the-gated-node-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-the-hello-world-image-to-build-from-the-gated-node-image"}},[e._v("#")]),e._v(" Update the hello-world image to build from the gated node image")]),e._v(" "),t("p",[e._v("Add a "),t("code",[e._v("AcrPull")]),e._v(" token to access the base-artifacts registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('az keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY_BASE_ARTIFACTS}-user" \\\n  --value "registry-${REGISTRY_BASE_ARTIFACTS}-user"\n\naz keyvault secret set \\\n  --vault-name $AKV \\\n  --name "registry-${REGISTRY_BASE_ARTIFACTS}-password" \\\n  --value $(az acr token create \\\n              --name "registry-${REGISTRY_BASE_ARTIFACTS}-user" \\\n              --registry $REGISTRY_BASE_ARTIFACTS \\\n              --repository node content/read \\\n              -o tsv \\\n              --query credentials.passwords[0].value)\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("p",[e._v("Add credentials for our Public Registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task credential add \\\n  -n hello-world \\\n    -r $REGISTRY \\\n  --login-server $REGISTRY_BASE_ARTIFACTS_URL \\\n  -u https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_BASE_ARTIFACTS}-user \\\n  -p https://${AKV}.vault.azure.net/secrets/registry-${REGISTRY_BASE_ARTIFACTS}-password \\\n  --use-identity [system]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Change the REGISTRY_FROM_URL to use the BASE_ARTIFACTS registry")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task update \\\n  -n hello-world \\\n  -r $REGISTRY \\\n  --set KEYVAULT=$AKV \\\n  --set REGISTRY_FROM_URL=${REGISTRY_BASE_ARTIFACTS_URL}/ \\\n  --set ACI=$ACI \\\n  --set ACI_RG=$ACI_RG\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Run the hello-world task to change it's base image dependency")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task run -r $REGISTRY -n hello-world\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"update-the-base-image-with-a-valid-change"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-the-base-image-with-a-valid-change"}},[e._v("#")]),e._v(' Update the base image with a "valid" change')]),e._v(" "),t("p",[e._v("Open the "),t("code",[e._v("Dockerfile")]),e._v(" in base-image-node repo\nChange the "),t("code",[e._v("BACKGROUND_COLOR")]),e._v(" to "),t("code",[e._v("Green")]),e._v(" to simulate a valid change.")]),e._v(" "),t("div",{staticClass:"language-Dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" REGISTRY_NAME=")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REGISTRY_NAME}")]),e._v("node:15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" NODE_VERSION 15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" BACKGROUND_COLOR Green")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("Commit the change and monitor the sequence of updates")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once running, "),t("code",[e._v("ctrl+C")]),e._v(" and monitor the logs")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once complete, monitor the base-image-import task")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY_BASE_ARTIFACTS\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once running, "),t("code",[e._v("ctrl+C")]),e._v(" and monitor the logs")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY_BASE_ARTIFACTS\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once complete, monitor the hello-world task")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once running, "),t("code",[e._v("ctrl+C")]),e._v(" and monitor the logs")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once complete, view the ACI hello-world image.")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("explorer.exe "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("az container show "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --resource-group $ACI_RG "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --name $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("ACI"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --query ipAddress.ip "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --out tsv"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"view-the-gated-workflow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#view-the-gated-workflow"}},[e._v("#")]),e._v(" View the gated workflow")]),e._v(" "),t("p",[e._v("Perform the above steps again, with a background color of red")]),e._v(" "),t("p",[e._v("Open the "),t("code",[e._v("Dockerfile")]),e._v(" in base-image-node repo\nChange the "),t("code",[e._v("BACKGROUND_COLOR")]),e._v(" to "),t("code",[e._v("Red")]),e._v(" to simulate a valid change.")]),e._v(" "),t("div",{staticClass:"language-Dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" REGISTRY_NAME=")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REGISTRY_NAME}")]),e._v("node:15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" NODE_VERSION 15-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENV")]),e._v(" BACKGROUND_COLOR Red")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("Commit the change and monitor the sequence of updates")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once running, "),t("code",[e._v("ctrl+C")]),e._v(" and monitor the logs")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY_PUBLIC\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once complete, monitor the base-image-import task")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch -n1 az acr task list-runs -r $REGISTRY_BASE_ARTIFACTS\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Once running, "),t("code",[e._v("ctrl+C")]),e._v(" and monitor the logs")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az acr task logs -r $REGISTRY_BASE_ARTIFACTS\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("At this point, you should see base-import-node fail validation and stop the sequence to publish a hello-world update.")]),e._v(" "),t("h3",{attrs:{id:"publish-an-update-to-hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#publish-an-update-to-hello-world"}},[e._v("#")]),e._v(" Publish an update to hello-world")]),e._v(" "),t("p",[e._v("Changes to the hello-world image will continue using the last validated node image.")]),e._v(" "),t("p",[e._v("Any additional changes to the base-node image that pass the gated validations will trigger base-updates to the hello-world image.")]),e._v(" "),t("h2",{attrs:{id:"cleaning-up"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cleaning-up"}},[e._v("#")]),e._v(" Cleaning up")]),e._v(" "),t("div",{staticClass:"language-azurecli line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("az group delete -n $REGISTRY_RG --no-wait -y\naz group delete -n $REGISTRY_PUBLIC_RG --no-wait -y\naz group delete -n $REGISTRY_BASE_ARTIFACTS_RG --no-wait -y\naz group delete -n $AKV_RG --no-wait -y\naz group delete -n $ACI_RG --no-wait -y\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"next-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next steps")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/container-registry-image-tag-version.html"}},[e._v("Adopt tagging scheme for base image updates")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/container-registry-image-tag-version.html"}},[e._v("Build images from stable service tags - can continue to receive security patches and framework updates.")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/container-registry-image-lock.html"}},[e._v("Protect images using Image/tag locking")])],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);