{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "registryName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "metadata": {
        "description": "Name of your Azure Container Registry"
      }
    },
    "exportPipelineName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "metadata": {
        "description": "Name of your export pipeline."
      }
    },
    "userAssignedIdentity": {
      "type": "string",
      "metadata": {
        "description": "The user assigned identity to be bound to the task run."
      },
      "defaultValue": ""
    },
    "targetUri": {
      "type": "string",
      "metadata": {
        "description": "The target URI of the export pipeline."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The key vault name to obtain the target storage SAS token."
      }
    },
    "sasTokenSecretName": {
      "type": "string",
      "metadata": {
        "description": "The key vault secret name to obtain the target storage SAS token."
      }
    },
    "options": {
      "type": "array",
      "metadata": {
        "description": "The list of all options configured for the pipeline."
      }
    }
  },
  "variables": {
    "targetType": "AzureStorageBlobContainer",
    "systemIdentity": {
      "type": "SystemAssigned"
    },
    "userIdentity": {
      "type": "UserAssigned",
      "userAssignedIdentities": {
        "[parameters('userAssignedIdentity')]": {}
      }
    },
    "keyVaultSecretsPermissions": [
      "get"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-12-01-preview",
      "name": "[parameters('registryName')]",
      "location": "[parameters('location')]",
      "comments": "Container registry for storing docker images",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[parameters('registryName')]"
      },
      "sku": {
        "name": "Premium",
        "tier": "Premium"
      },
      "properties": {
        "adminUserEnabled": false
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/exportPipelines/",
      "name": "[concat(parameters('registryName'), '/', parameters('exportPipelineName'))]",
      "location": "[parameters('location')]",
      "apiVersion": "2019-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
      ],
      "identity": "[if(not(empty(parameters('userAssignedIdentity'))), variables('userIdentity'), variables('systemIdentity'))]",
      "properties": {
        "target": {
          "type": "[variables('targetType')]",
          "uri": "[parameters('targetUri')]",
          "keyVaultUri": "[concat(reference(resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName')), '2019-09-01').vaultUri, 'secrets/', parameters('sasTokenSecretName'))]"
        },
        "options": "[parameters('options')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(parameters('keyVaultName'), '/add')]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries/exportPipelines', parameters('registryName'), parameters('exportPipelineName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[if(not(empty(parameters('userAssignedIdentity'))), reference(parameters('userAssignedIdentity'), '2018-11-30').principalId, reference(resourceId('Microsoft.ContainerRegistry/registries/exportPipelines', parameters('registryName'), parameters('exportPipelineName')), '2019-12-01-preview', 'Full').identity.principalId)]",
            "permissions": {
              "secrets": "[variables('keyVaultSecretsPermissions')]"
            }
          }
        ]
      }
    }
  ]
}